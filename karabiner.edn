{:default true

 :alone 500
 :delay 200
 :held 500
 :sim 200
 :simlayer-threshold 222
 :modifiers {;
             :super-hyper [:command :shift :control :option :fn]
             :hyper [:command :shift :control :option]
             :cos [:command :shift :option]
             :cst [:command :shift :control]
             :co [:command :option]
             :cs [:command :shift]
             :ct [:command :control]
             :to [:control :option]
             :ts [:control :shift]
             :os [:option :shift]
             ;
             }
 :froms {;alias
         :delete {:key :delete_or_backspace}
         :return {:key :return_or_enter}
         :tilde {:key :grave_accent_and_tilde}


         ;colemak froms (for easier mnemonics)
         :-q {:key :q}
         :-w {:key :w}
         :-f {:key :e}
         :-p {:key :r}
         :-g {:key :t}
         :-j {:key :y}
         :-l {:key :u}
         :-u {:key :i}
         :-y {:key :o}
         :-semicolon {:key :p}

         :-a {:key :a}
         :-r {:key :s}
         :-s {:key :d}
         :-t {:key :f}
         :-d {:key :g}
         :-h {:key :h}
         :-n {:key :j}
         :-e {:key :k}
         :-i {:key :l}
         :-o {:key :semicolon}

         :-z {:key :z}
         :-x {:key :x}
         :-c {:key :c}
         :-v {:key :v}
         :-b {:key :b}
         :-k {:key :n}
         :-m {:key :m}

         ;
         }

 :tos {;
       :delete {:key :delete_or_backspace}
       :return {:key :return_or_enter}
       :tilde {:key :grave_accent_and_tilde}

       ;shortcuts
       :autocomplete {:key :spacebar :modi :control} ;!Tspacebar
       :command_palette {:key :t :modi :command}
       
       :cursor_find_match {:key :d :modi :command}
       :cursor_above {:key :up_arrow :modi :co}
       :cursor_below {:key :down_arrow :modi :co}
       :acejump {:key :j :modi :cos}
       :acejump_line {:key :l :modi :cos}
       :acejump_selection {:key :s :modi :cos}
       :acejump_multi {:key :m :modi :cos}
       
       
       :delete_line {:key :k :modi :cs} ;!CSk

       :find_in_project {:key :f :modi :cs} ;!CSf

       :focus_git {:key :g :modi :ts} ;!TSg
       :focus_editor {:key :e :modi :control}
       :focus_explorer {:key :e :modi :cos} ;:!CSOe
       :focus_terminal {:key :j :modi :command}
       :new_terminal {:key :grave_accent_and_tilde :modi :ts}; !TS`
       
       :open_next_editor {:key :right_arrow :modi :co}
       :open_prev_editor {:key :left_arrow :modi :co}
       :go_back {:key :hyphen :modi :control}
       :go_forward {:key :hyphen :modi :ts}
       
       :replace {:key :f :mode :co}
       
       :split_window {:key :backslash :modi :command}; !Cbackslash

       :toggle_sidebar {:key :b :modi :command} ;!Cb

       :expand_selection {:key :right_arrow :modi :cst}
       :shrink_selection {:key :left_arrow :modi :cst}

       :go_to_file {:key :p :modi :command}
       :insert_line_below {:key :return_or_enter :modi :command} ;!Creturn_or_enter
       :insert_line_above {:key :return_or_enter :modi :cs} ;!Creturn_or_enter
       :wrap_emmet {:key :p :modi :hyper}

       ;named symbols
       :open_brace {:key :open_bracket :modi :shift}
       :close_brace {:key :close_bracket :modi :shift}

       :open_paren {:key :9 :modi :shift}
       :close_paren {:key :0 :modi :shift}

       :less_than {:key :comma :modi :shift}
       :greater_than {:key :period :modi :shift}

       :emoji_picker {:key :spacebar :modi :ct} ;!CTspacebar

       :open_1password {:key :p :modi :hyper} ;!OCbackslash

       :take_screenshot {:key :6 :modi :cs} ;!CS6

       :toggle_screen_brush {:key :tab :modi :option} ;!Otab

       ;brave
       :open_dev_tools {:key :i :modi :co} ;:!COl
       :brave_full_screen {:key :f :modi :ct}
       :focus_omnibar {:key :l :modi :command}
       
       ;pretzel
       :pretzel_play_or_pause {:key :p :modi :os}
       :pretzel_fastforward {:key :close_bracket :modi :os}

       ;ableton
       :add_midi_clip {:key :m :modi :cs};!CSm
       ;
       }
 
 :templates {;
             :new-note "osascript -e 'tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"new-note\" in workflow \"com.johnlindquist.new-note\" with argument \"\"'"
             :new-thought ". ~/.jsrc; new-thought"
             :alfred "osascript -e 'tell application \"Alfred 4\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
             :code-project "osascript -e 'tell application \"Visual Studio Code\" to activate' &&
                            open -a 'Visual Studio Code' %s -g %s
                            "
             :delay "osascript -e 'delay \"%s\"'"
             :km "osascript -e 'tell application \"Keyboard Maestro Engine\" to do script \"%s\"'"
             :type "osascript -e 'tell application \"System Events\" to keystroke \"%s\"'"
             :launch "osascript -e 'tell application \"%s\" to activate'"
             :open-brave "osascript -e '
                        set address to \"%s\"
                        
                        tell application \"Brave\"
                           activate
                                if not (exists window 1) then reopen
                                repeat with w in windows
                                        set i to 1
                                        repeat with t in tabs of w
                                        if URL of t contains address then
                                                set active tab index of w to i
                                                set index of w to 1
                                                return
                                        end if
                                        set i to i + 1
                                        end repeat
                                end repeat
                                open location \"http://\" & address
                        end tell
                           '"
             :open "open \"%s\""
             :open-a "open -a '%s'"
             :paste "osascript -e '
                        set the clipboard to \"%s\"
                        tell application \"System Events\"
                                keystroke \"v\" using command down
                        end tell
                '"
             :restream "osascript -e 'tell application \"Restream Chat\" to activate'"
             :zsh "zsh ~/.zfunc/'%s'"
             :print "osascript -e '
                        set the clipboard to do shell script \". ~/.jsrc; %s\"
                        tell application \"System Events\"
                                keystroke \"v\" using command down
                        end tell
                     '"
             :modify "osascript -e '
                        tell application \"System Events\" to keystroke \"c\" using {command down}
                        set clipboardText to the clipboard
                        set selectedText to the quoted form of clipboardText
                        set output to do shell script \". ~/.jsrc; %s \" & selectedText
                        set the clipboard to output                    
                        tell application \"System Events\" to keystroke \"v\" using {command down}
                     '"
              :test "osascript -e 'say \"poop\"'"
              :query "osascript -e '
                      tell application id \"com.runningwithcrayons.Alfred\" to run trigger \"scripted-list\" in workflow \"com.johnlindquist.scripted-list\" with argument \"%s\"
                      '"
             ;
             }

 :applications {;
                :ableton ["com.ableton.live"]
                :brave ["com.brave.Browser"]
                :code ["com.microsoft.VSCode"]
                :fcp ["com.apple.FinalCut"]
                :miro ["com.electron.realtimeboard"]
                :screenflow ["net.telestream.screenflow9"]
                :slack ["com.tinyspeck.slackmacgap"]
                :webstorm ["com.jetbrains.Webstorm"]
                ;
                }
; Layers Are Typically "Thumb Keys" or "Pinky Keys"
 :layers {;
          :caps_lock-mode {:key :caps_lock :alone {:key :escape}}
          :escape-mode {:key :escape :alone {:key :escape}}
          :f23-mode {:key :f23 :alone  {:key :vk_none}}
          :launch-mode {:key :f24 :alone {:key :spacebar :modi :left_option}}
          :non-mode {:key :non_us_backslash :alone {:key :non_us_backslash}}
          :num-mode {:key :keypad_num_lock :alone {:key :vk_none}}
          :shift-mode {:key :shift}
          :tab-mode {:key :tab :alone {:key :tab}}
          :tilde-mode {:key :grave_accent_and_tilde :alone {:key :grave_accent_and_tilde}}

          ;testing left thumb + right thumb
          :f24-shift-mode {:key :left_shift :condi :launch-mode}

          ;
          }
 :simlayers {;
             :snippet-mode {:key :quote}
             :media-mode {:key :period}
             :tab-mode {:key :tab}

             :query-mode {:key :q}

             :hyphen-mode {:key :hyphen :alone {:key :hyphen}}

             :alt-mode {:key :a}
             :alt-shift-mode {:key :s}
             :d-mode {:key :d}
             :movement-mode {:key :f}
             :cursor-mode {:key :g}
             :delete-mode {:key :j}

             :emoji-mode {:key :z}

             :equals-mode {:key :equal_sign}
             :slash-mode {:key :slash}

             :semicolon-mode {:key :semicolon}
             :backslash-mode {:key :backslash}

             :spacebar-mode {:key :spacebar}

             :editor-mode {:key :k}
             :print-mode {:key :r} ;"p" in colemak
             :create-mode {:key :c} ;
             :modify-mode {:key :m} ;
             :open-mode {:key :semicolon}; "o" in colemak
             :wrap-mode {:key :w} ;
             :pretzel-mode {:key :u}; Global shortcuts for a music app called "Pretzel"
 ;
             }
 :devices {;; Note - I'm currently using a Kinesis Advantage keyboard for my defaults
           ;; and my macbook hasn't left my desk in a looooooong time...
           :macbook [{:product_id 832 :vendor_id 1452}]
           ;
           }
 :main [;
        
        {:des "global"
         :rules [[:f8 :toggle_screen_brush]
                 ;
                 ]}

        {:des "create"
         :rules [:create-mode
                 [:-n [:new-note]] ;h
                 [:-t [:new-thought]] ;a script that creates a new journal mdx file and open in code
                 
                 ;
                 ]
         }
        {:des "query"
         :rules [:query-mode
                 [:-d [:query "describe"]]
                 [:-f [:query "follow"]]
                 [:-g [:alfred "giphy" "dev.kejadlen.giphy" " "]]
                 [:-l [:query "sounds-like"]];sounds Like
                 [:-n [:query "noun"]] ;
                 [:-o [:alfred "google" "com.johnlindquist.google"]] ;Google (similar to my autocomplete)
                 [:-r [:query "rhyme"]]
                 [:-s [:query "spell"]]
                 [:-t [:query "trigger"]] ;
                 [:-x [:query "antonyms"]] ;x Opposite
                 [:-y [:query "synonyms"]]
                 ;
                 ]
         ;
         }
        {:des "print"
         :rules [:print-mode
                 [:-u [:print "url"]];
                 [:-m [:print "markdown"]];
                 [:-n [:print "name"]];
                 [:-j [:print "joke"]]; 
                 [:-e [:alfred "emmet" "com.johnlindquist.emmet"]] ;
                 ;
                 ]}

        {:des "editor"
         :rules [:editor-mode
                 [:-a :open_prev_editor]
                 [:-r :go_back]
                 [:-s :go_forward]
                 [:-t :open_next_editor]
                 ;
                 ]}
        {:des "wrap"
         :rules [:wrap-mode
                 [:-m [:modify "wrap-markdown-link"]]
                 [:-e :wrap_emmet]
                 ; [test]()
                 ]}
        {:des "modify"
         :rules [:modify-mode
                 [:-t [:modify "title-case"]];

                 ;hello world
                 ]}

        {:des "media"
         :rules [:media-mode
                 [:-s :rewind];
                 [:-t :play_or_pause];
                 [:-d :fastforward];
                 ;
                 ]}

        {:des "pretzel"
         :rules [:pretzel-mode
                 [:-t :pretzel_play_or_pause];
                 [:-d :pretzel_fastforward];
                 ;
                 ]}

        {:des "testing thumb chords"
         :rules [:f24-shift-mode
                 [:a "say poop"]
                 ;
                 ]}



        {:des "slack"
         :rules [;
                 [:condi :slack]
                 [:left_command :left_command nil {:alone :!Ct}]
                 ;
                 ]}

        {:des "miro"
         :rules [[:condi :miro :multitouch_extension_finger_count_total]
                 [:delete_or_backspace [:escape :button1 :delete_or_backspace]]
                 [:a [:escape :n :button1]]

                 [:condi :miro ["multitouch_extension_finger_count_total" 2]]
                 [:f [:escape :n :button1]]
                 [:c [:!Cc :button1 :!Cv]]
                 ;
                 ]}

        {:des "code"
         :rules [:code
                 [:left_command :left_command nil {:alone :focus_editor}]
                 [:left_option :left_option nil {:alone :focus_terminal}]
                 [:right_option :right_option nil {:alone :command_palette}]
                 [:right_control :right_control nil {:alone :go_to_file}]
                 [{:key :s :modi :command} :replace]
                 ;view
                 ;note - I try to keep these on my left hand so I can keep my right on the mouse
                 [:condi :code :escape-mode]
                 [:-g :focus_git] ;; SCM
                 [:-e :focus_explorer] ;; Explorer
                 [:-d :focus_explorer] ;; Explorer
                 [:-s :!!s] ;; Status Bar
                 [:-t :focus_terminal]
                 [:-n :new_terminal]
                 [:-f :find_in_project]
                 [:-z [:!Ck :z]] ;zen mode
                 [:-v :!!v]
                 [:-x :!!x]
                 [:-p :!!r] ;toggle panel
                 [:semicolon :!!semicolon]


                ;;  [:left_shift :!Cb]
                 [:-a :toggle_sidebar]

                 ;trackpad

                 ;trackpad 2
                 [:condi :code ["multitouch_extension_finger_count_total" 2]]
                 [:-t [:button1 :f2]]

                 ;
                 ]}


        {:des "trackpad"
         :rules [;
                 :multitouch_extension_finger_count_total
                 [:f :button1]

                 [:grave_accent_and_tilde :!Tgrave_accent_and_tilde]
                 [:w :!Cw]
                 [:e :!Ct]
                 [:r :!Cl]

                 [:a {:pkey :button1 :modi :left_option}]
                 [:s :button2]

                 [:d {:pkey :button1 :modi :left_shift}]
                 ;Allow "a" to be left_option in other apps
                 [:g {:pkey :button1 :modi :left_command}]

                 [:z :!Cz]
                ;  [:non_us_backslash :!CSz]
                 [:x :!Cx]
                 [:c :!Cc]
                 [:v :!Cv]
                ;;  [:b :!Cb]

                 [:delete [:button1 :delete]]

                 ;trackpad 2
                 [:condi ["multitouch_extension_finger_count_total" 2]]

                 [:x [:button1 :!Cx]]
                 [:c [:button1 :!Cc]]
                 [:v [:button1 :!Cv]]
                 [:left_command :return_or_enter]
                ;;  [:##f :button2]

                 ;trackpad 3
                 [:condi ["multitouch_extension_finger_count_total" 3]]
                 [:d :take_screenshot]

                ;;  [:a :!COleft_arrow]
                ;;  [:s :!Cleft_arrow]
                ;;  [:d :!Cright_arrow]
                ;;  [:f :!COright_arrow]

                 ;trackpad 4
                 [:condi ["multitouch_extension_finger_count_total" 4]]
                 [:##f :return_or_enter]
                 ;
                 ]}

        {:des "open files"
         :rules [:open-mode
                 [:-c [:code-project "~/.config"]]
                 [:-k [:code-project "~/.config/" "~/.config/karabiner.edn"]]

                 ;
                 ]}

        {:des "brave"
         :rules [:brave
                 [:left_command :left_command nil {:alone [:!Ct]}]
                 [:left_option :left_option nil {:alone [:!Cw]}]
                 [:right_option :focus_omnibar]
                 [:right_control :left_option nil {:alone [:!CSt]}]
                ;;  [:-d :open_dev_tools]

                 [:condi :brave ["multitouch_extension_finger_count_total" 1]]

                 [:condi :brave ["multitouch_extension_finger_count_total" 2]]
                 [:-d :open_dev_tools]
                 [:-a :!COleft_arrow]
                 [:-t :!COright_arrow]

                 [:condi :brave :escape-mode]
                 [:-f :brave_full_screen]
                ;;  [:grave_accent_and_tilde :a nil {:delayed {:invoked [:y] :canceled [:x]}}]
                 ;
                 ;
                 ]}
;
        {:des "emoji"
         :rules [:emoji-mode
                 [:-a [:paste ""]] ;                
                 [:-b [:paste "😊"]] ;blush
                 [:-c [:paste "👏"]] ;clap
                 [:-d [:paste "🧐"]] ;dignified
                 [:-e :emoji_picker] 
                 [:-f [:paste "🤦‍♂️"]] ;facepalm️
                 [:-g [:paste "😬"]] ;grimace
                 [:-h [:paste "😍"]] ;heart-eyes
                 [:-i [:paste "👀"]] ;I
                 [:-j [:paste "😂"]] ;joking
                 [:-k [:paste ""]] ;
                 [:-l [:paste "❤️"]] ;love
                 [:-m [:paste "🤯"]] ;mind blown 
                 [:-n :emoji_picker] ;
                 [:-o [:paste "💩"]] ;pOop
                 [:-p [:paste "🎉"]] ;party
                 [:-q [:paste "🤫"]] ;quiet
                 [:-r [:paste "🏎"]] ;racecar
                 [:-s [:paste "😢"]] ;sad
                 [:-t [:paste "🤔"]] ;thinking
                 [:-u [:paste "🤷‍♂️"]] ;shrUg
                 [:-v [:paste "😎"]] ;very cool
                 [:-w [:paste "😉"]] ;wink:
                 [:-x [:paste "😵"]] ;x-eyes
                 [:-y [:paste "😅"]] ;sweatY
                 [:left_command [:paste "👍"]]
                 [:left_option [:paste "👎"]]
                 ;
                 ]}


        {:des "caps_lock"
         :rules [:caps_lock-mode
                 [:##caps_lock :##escape]
                 ; I don't use a caps_lock key on my keyboard
                 ;
                 ]}

        {:des "launch"
         :rules
         [:launch-mode
          [:1 :open_1password]
          [:-c [:alfred "code" "com.vivaxy.alfred-workflow.open-in-vscode" " "]]
          [:-d [:launch "Discord"]]
        ;;   [:-f :!!t]
          [:-f [:launch "Front"]];
          [:-g [:alfred "github" "de.gh01.alfred.github" " "]]
          [:-i [:launch "iTerm"]]
        ;;   [:-l :!!l]
          ;restart karabiner
          [:-k "launchctl kickstart -k org.pqrs.karabiner.karabiner_console_user_server"]
          [:-m [:launch "YouTube Music"]]
          [:-p [:launch "Pretzel"]]
          [:-r [:launch "Restream Chat"]]
          [:-s [:launch "Slack"]]
          [:-t [:launch "Brave"]] ;
          [:-v [:launch "VLC"]];
          [:-z [:launch "Visual Studio Code"]];viZ
          [:comma [:launch "Messages"]];
                 ;
          ]}


        {:des "delete"
         :rules [:delete-mode
                 [:hyphen :delete_line :code]
                 [:hyphen :!Cdelete_or_backspace]
                 [:-a :!Odelete_or_backspace]
                 [:-r :delete_or_backspace]
                 [:-s :delete_forward]
                 [:-t :!Odelete_forward]
                 [:-d :!Cdelete_forward]

                 ;
                 ]}
        {:des "homerow cursor" 
         :rules [:cursor-mode
                 [:h :cursor_find_match]
                 [:j :cursor_below]
                 [:k :cursor_above]
                 [:-j :acejump]
                 [:-l :acejump_line]
                 [:-m :acejump_multi]
                 [:left_shift :acejump_selection]
                 ]
         }

        {:des "homerow movement"

         :rules [:movement-mode
                 [:##u :!Cleft_arrow]
                 [:##p :!Cright_arrow]

                 [:##j :left_arrow]
                 [:##k :down_arrow]
                 [:##l :up_arrow]
                 [:##semicolon :right_arrow]

                 ;;[:semicolon :autocomplete]

                 [:return_or_enter :insert_line_below]




                 [:left_shift :expand_selection]
                 ;
                 ]}

        {:des "homerow alt+shift"
         :rules [:alt-shift-mode
                 [:##j :!OSleft_arrow]
                 [:##k :!OSdown_arrow]
                 [:##l :!OSup_arrow]
                 [:##semicolon :!OSright_arrow]

                 [:##spacebar {:pkey :button1 :modi :left_command}]
                 [:##left_shift :##button2]

                 ;
                 ]}

        {:des "homerow shift"
         :rules [:d-mode
                 [:##u :!Shome]
                 [:##p :!Send]

                 [:##j :!Sleft_arrow]
                 [:##k :!Sdown_arrow]
                 [:##l :!Sup_arrow]
                 [:##semicolon :!Sright_arrow]


                 [:left_shift :shrink_selection]
                 [:return_or_enter :insert_line_above]

                 ;;[:semicolon :expand_selection]
                 ;;[:quote :shrink_selection]

                 ;
                 ]}
        {:des "homerow alt"
         :rules [:alt-mode
                 [:##u :home]

                 [:##p :end]

                 [:##j :!Oleft_arrow]
                 [:##k :!Odown_arrow]
                 [:##l :!Oup_arrow]
                 [:##semicolon :!Oright_arrow]
                 ;
                 ]}
        {:des "homerow control"
         :rules [:hyphen-mode
                ;  [:h {:mkey {:hwheel 60}}]
                ;;   [:j {:mkey {:vwheel 100}}]
                ;;   [:##k {:mkey {:vwheel -60}}]

                ;  [:l {:mkey {:hwheel -60}}]
                 [:##d :left_shift]


                 [:##j :!Fleft_arrow]
                 [:##k :!Fdown_arrow]
                 [:##l :!Fup_arrow]
                 [:##semicolon :!Fright_arrow]
                ;  ;
                 ]}


        {:des "spacebar"
        
         :rules [:spacebar-mode
                 [:-a :!S1]
                 [:-r :!Shyphen]
                 [:-s :hyphen]
                 [:-t :!Ssemicolon]
                 [:-c :!Sequal_sign]

                 [:-n :open_brace]
                 [:-e :close_brace]
                 [:-i :equal_sign]
                 [:-o :greater_than]

                 [:-m :open_bracket]
                 [:comma :close_bracket]
                 [:period :open_paren]
                 [:slash :close_paren]

                ;; [:j :open_brace]
                ;; [:k :close_brace]

                ;; [:l :less_than]
                ;; [:semicolon :greater_than]

                 ;symbol sequences
                 [:left_shift [:spacebar :equal_sign :spacebar]]; =  =  =  =  =  =  =  =  =  =
                 [:q [:!S9 :!S0 :equal_sign :greater_than :spacebar]];()=> 
                 [:e [:!S9 :!S9 :!S0 :equal_sign :greater_than :spacebar :open_brace :close_brace :!S0 :left_arrow :left_arrow]];(()=> {})

                 [:g [:spacebar :equal_sign :greater_than :spacebar]]; =>  => ={} =""
                 [:h [:equal_sign :open_brace :close_brace :left_arrow]];={}
                 [:b [:equal_sign :open_brace :close_brace :left_arrow]];={}
                 [:quote [:equal_sign :!Squote :!Squote :left_arrow]];=""


                 ;macros


                 ;
                 ]}


        {:des "special characters"
         :rules [:tilde-mode
                 ;special characters: !@#$%^&*()
                ;;  [:##a :!S1]
                ;;  [:##s :!S2]
                ;;  [:##d :!S3]
                ;;  [:##f :!S4]; 
                ;;  [:##g :!S5]
                ;;  [:##h :!S6]
                ;;  [:##j :!S7]
                ;;  [:##k :!S8]
                ;;  [:##l :!S9]
                ;;  [:##semicolon :!S0]
                 [:-e :!S1]; ! exclaim
                 [:-a :!S2]; @ at
                 [:-h :!S3]; # hash
                 [:-d :!S4]; $ dollar
                 [:-p :!S5]; % percent
                 [:-c :!S6]; ^ caret
                 [:-s :!S7]; & amperSand
                 [:-b :!S8]; * bullet
                 ; 
                 ]}

        {:des "numbers"
         :rules [:non-mode
                 [:##a :1]
                 [:##s :2]
                 [:##d :3]
                 [:##f :4]; 
                 [:##g :5]
                 [:##h :6]
                 [:##j :7]
                 [:##k :8]
                 [:##l :9]
                 [:##semicolon :0]
                 ;
                 ]}

        {:des "tab-mode"
         :rules [:tab-mode
                 ;open urls
                 [:-e [:open-brave "egghead.io"]]
                 [:-g [:open-brave "mail.google.com"]]
                 [:-j [:open-brave "js.new"]];
                 [:-k [:open-brave "github.com/search?q=extension%3A.edn+filename%3Akarabiner.edn&type=Code&ref=advsearch&l=&l="]]
                 [:-l [:open-brave "localhost:3000"]]
                 [:-m [:open-brave "access.mymind.com/cards"]]
                 [:-n [:open-brave "news.google.com"]]
                 [:-r [:open-brave "app.restream.io/titles"]]
                 [:-t [:open-brave "twitter.com"]]
                 [:-u [:open-brave "egghead.io/lessons/new"]];Upload
                 [:-x [:open-brave "next.egghead.io"]]
                 [:-y [:open-brave "youtube.com"]]
;
                 ]}


        {:des "colemak"
         :rules [;
                 [:##e :f]
                 [:##r :p]
                 [:##t :g]
                 [:##y :j]
                 [:##u :l]
                 [:##i :u]
                 [:##o :y]
                 [:##p :semicolon]

                 [:##s :r]
                 [:##d :s]
                 [:##f :t]
                 [:##g :d]
                 [:##j :n]
                 [:##k :e]
                 [:##l :i]
                 [:##semicolon :o]

                 [:##n :k]

                 [:close_bracket :a]
                 ;
                 ]}



        ;
        ]}




;; rule [:period ["media-mode" 1] nil {:afterup ["media-mode" 0] :alone :period}]
;;       |_____| |_______________| |_| |_________________________________________|
;;        <from>    <to>      <conditions>         <other options>

    ;; !  | means mandatory
    ;; #  | means optional
    ;; C  | left_command
    ;; T  | left_control
    ;; O  | left_option
    ;; S  | left_shift
    ;; F  | fn
    ;; Q  | right_command
    ;; W  | right_control
    ;; E  | right_option
    ;; R  | right_shift
    ;; 
    ;; !! | mandatory command + control + optional + shift (hyper)
    ;; ## | optional any
;; 